{"version":3,"sources":["images/icon-paper.svg","images/icon-rock.svg","images/icon-scissors.svg","images/icon-spock.svg","images/icon-lizard.svg","images/logo.svg","images/image-rules.svg","images/image-rules-bonus.svg","images/icon-close.svg","images/logo-bonus.svg","components/Rules.js","components/Result.js","components/ExtendedVersion.js","components/ChooseVersionOfGame.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Rules","blackBody","backgroundColor","state","rules","handleRules","e","preventDefault","_this","setState","props","handleCloseRulesOnAppClick","displayRules","react_default","a","createElement","Fragment","className","onClick","handleCloseRules","value","src","iconClose","alt","extendedVersion","rulesImgExtended","rulesImg","handleCloseGlobal","rulesApp","this","document","addEventListener","style","color","Component","Result","playerChoice","computerChoice","currency","handleRestart","concat","paper","rock","scissors","spock","lizard","ExtendedVersion","handlePlayerChoice","ChooseVersionOfGame","type","name","id","checked","onChange","handleSlider","App","gridTemplateAreasChooseOption","display","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridTemplateAreasResult","choicesForComputer","choicesForComputerExtended","time","points","gameOn","restart","Math","floor","random","length","currentTarget","setTimeout","handleEnterRestart","keyCode","rulesFromRulesState","href","logoExtended","logo","components_Result","handleEnter","components_ChooseVersionOfGame","components_ExtendedVersion","components_Rules","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf13e11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-spock.b6446e8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lizard.7d2e0b18.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.759a2075.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules.5d74d25d.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules-bonus.f19a40fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.919ab92a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-bonus.f4c973f7.svg\";","import React, { Component } from 'react';\r\nimport '../style/Rules.scss';\r\nimport rulesImg from '../images/image-rules.svg';\r\nimport rulesImgExtended from '../images/image-rules-bonus.svg';\r\nimport iconClose from '../images/icon-close.svg';\r\n\r\nclass Rules extends Component {\r\n\r\n    blackBody = {\r\n        backgroundColor: 'black',\r\n    }\r\n    state = {\r\n        rules: false,\r\n    }\r\n\r\n\r\n    handleRules = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            rules: !this.state.rules,\r\n        })\r\n        this.props.handleCloseRulesOnAppClick(this.state.rules);//przekazanie stanu rules do metody w App\r\n    }\r\n\r\n    displayRules = () => { //wyświetlenie zasad jesli rules sa true, czyli kliknieto na przycisk\r\n        if (this.state.rules) {\r\n            return (\r\n                <>\r\n                    <div className='rulesMenu'>\r\n                        <div className='rulesTitle'>\r\n                            <h1>Rules</h1>\r\n                            <button className=\"rulesCloseButton\" onClick={this.handleCloseRules} value='x'><img src={iconClose} alt=\"iconClose\" /></button>\r\n                        </div>\r\n                        <div className='rulesImgContainer'>\r\n                            <img className='rulesImg' src={this.props.extendedVersion ? rulesImgExtended : rulesImg} alt=\"rulesImg\" />\r\n                        </div>\r\n\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCloseGlobal = () => { // to bedzie wynikalo z handleCloseRulesOnAppClick w App, pobiera stan rules w App poprzez props, zadaniem tego jest ustawienie rules w Rules na false, czyli zamkniecia okna Rules, jesli kliknie sie na div o klasie App\r\n        if (this.props.rulesApp === true) {\r\n            this.setState({\r\n                rules: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCloseRules = () => {\r\n        if (this.state.rules === true) { //jesli jest otworzone okno rules, to wtedy jak klikne w odpowiednie miejsce to zamknij okno z rules, czyli zmien na false\r\n            this.setState({\r\n                rules: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                {this.state.rules ? document.addEventListener('click', this.handleCloseGlobal) : null}\r\n                <button className=\"rulesOpenButton\" onClick={this.handleRules} style={{ backgroundColor: (this.state.rules ? 'white' : null), color: (this.state.rules ? 'hsl(229, 25%, 31%)' : null) }} value='rules'>Rules</button>\r\n                {this.displayRules()}\r\n                {this.state.rules ? <style>{'body { background-color: background-color: rgba(0, 0, 0, .3) } .App {opacity: .3}'}</style> : null}\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport paper from '../images/icon-paper.svg';\r\nimport rock from '../images/icon-rock.svg';\r\nimport scissors from '../images/icon-scissors.svg';\r\nimport spock from '../images/icon-spock.svg';\r\nimport lizard from '../images/icon-lizard.svg';\r\nimport '../style/Result.scss';\r\n\r\nconst Result = (props) => {\r\n    const { playerChoice, computerChoice, currency, handleRestart } = props;\r\n    return (\r\n        <>\r\n            <div className='result'>\r\n                <div className=\"playerChoice\">\r\n                    <h1 className='pickedTitle'>You Picked</h1>\r\n                    <div className={`${playerChoice}Element ${currency === \"YOU WIN\" ? 'winImpulse' : null}`/*te currency jest po to, zeby dodac klase winImpulse w razie przypadku gdy gracz wygra */}>\r\n                        <div className=\"choosedElement\">\r\n                            <img className={`${playerChoice}Img`} src={playerChoice === 'paper' ? paper : playerChoice === 'rock' ? rock : playerChoice === 'scissors' ? scissors : playerChoice === 'spock' ? spock : playerChoice === 'lizard' ? lizard : null} alt={playerChoice} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"restartGame\">\r\n                    <h1 className=\"currencyOfGame\">{currency}</h1>\r\n                    {computerChoice && <button className=\"buttonRestart\" onClick={handleRestart} value='restart'>Restart</button>} {/* jesli komputer juz dokonal wyboru, zebym restart ujrzal dopiero jak sie pojawi co wybral komputer, mozna tez zrobic jak currency nie jest puste */}\r\n                </div>\r\n                <div className=\"computerChoice\">\r\n                    <h1 className='pickedTitle'>Computer Picked</h1>\r\n                    {computerChoice ?\r\n                        <div className={`${computerChoice}Element ${currency === \"YOU LOST\" ? 'winImpulse' : null}` /* te currency jest po to, zeby dodac klase winImpulse w razie przypadku gdy komputer wygra */}>\r\n                            <div className=\"choosedElement\">\r\n                                <img className={`${computerChoice}Img`} src={computerChoice === 'paper' ? paper : computerChoice === 'rock' ? rock : computerChoice === 'scissors' ? scissors : computerChoice === 'spock' ? spock : computerChoice === 'lizard' ? lizard : null} alt={computerChoice} />\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className='loadingComputerChooseImpulse'>\r\n                            <div className=\"loadingComputerChooseImpulse2\">\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport '../style/ExtendedVersion.scss';\r\n\r\nimport paper from '../images/icon-paper.svg';\r\nimport rock from '../images/icon-rock.svg';\r\nimport scissors from '../images/icon-scissors.svg';\r\nimport spock from '../images/icon-spock.svg';\r\nimport lizard from '../images/icon-lizard.svg';\r\nconst ExtendedVersion = (props) => {\r\n    return (\r\n        <>\r\n            <div className='chooseOption extendedVersionContainer'>\r\n                <div className='scissorsElement scissorsElementExtended'>\r\n                    <button className='chooseElementButton' onClick={props.handlePlayerChoice} value='scissors'><img className='scissorsImg' src={scissors} alt=\"icon-scissors\" /></button>\r\n                </div>\r\n                <div className='spockElement spockElementExtended'>\r\n                    <button className='chooseElementButton' onClick={props.handlePlayerChoice} value='spock'><img className='spockImg' src={spock} alt=\"icon-spock\" /></button>\r\n                </div>\r\n                <div className='paperElement paperElementExtended'>\r\n                    <button className='chooseElementButton' onClick={props.handlePlayerChoice} value='paper'><img className='paperImg' src={paper} alt=\"icon-paper\" /></button>\r\n                </div>\r\n\r\n                <div className='lizardElement lizardElementExtended'>\r\n                    <button className='chooseElementButton' onClick={props.handlePlayerChoice} value='lizard'><img className='lizardImg' src={lizard} alt=\"icon-lizard\" /></button>\r\n                </div>\r\n\r\n                <div className='rockElement rockElementExtended'>\r\n                    <button className='chooseElementButton' onClick={props.handlePlayerChoice} value='rock'><img className='rockImg' src={rock} alt=\"icon-rock\" /></button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExtendedVersion;","import React from 'react';\r\nimport \"../style/ChooseVersionOfGame.scss\";\r\n\r\nconst ChooseVersionOfGame = (props) => {\r\n    return (\r\n        <div className=\"chooseVersionOfGame\">\r\n            <span className=\"choosedVersion classicVersion\">Classic Version</span>\r\n            <label className=\"versionSwitch\">\r\n                {/* w input w checked jest warunek, aby byl slajder ciagle przesuniety w prawo, czyli zaznaczony jesli wybralem rozszerzona wersje, bo inaczej po restarcie wracalby do wersji podstawowej */}\r\n                <input type=\"checkbox\" name=\"\" id=\"\" checked={`${props.extendedVersion ? 'checked' : ''}`} onChange={props.handleSlider} />\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n            <span className=\"choosedVersion extendedVersion\">Extended Version</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChooseVersionOfGame;","import React, { Component } from 'react';\nimport '../style/App.scss';\nimport Rules from './Rules';\nimport Result from './Result';\nimport ExtendedVersion from './ExtendedVersion';\n\nimport paper from '../images/icon-paper.svg';\nimport rock from '../images/icon-rock.svg';\nimport scissors from '../images/icon-scissors.svg';\nimport logo from '../images/logo.svg';\nimport logoExtended from '../images/logo-bonus.svg';\nimport ChooseVersionOfGame from './ChooseVersionOfGame';\n\nclass App extends Component {\n\n\n  /* ====================================================\n  Style Grid, ktore beda sie roznily dla Glownego Okna, \n  czyli wyboru r/p/s i result, czyli tego co uzytkownik \n  zobaczy po wyborze r/p/s \n  ========================================================*/\n  gridTemplateAreasChooseOption = {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gridTemplateRows: \"auto\",\n    gridTemplateAreas: \"'header''chooseVersionOfGame''chooseOption'\",\n  };\n  gridTemplateAreasResult = {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gridTemplateRows: \"auto\",\n    gridTemplateAreas: \"'header''result'\",\n  }\n\n  choicesForComputer = ['paper', 'rock', 'scissors'];\n  choicesForComputerExtended = ['paper', 'rock', 'scissors', 'spock', 'lizard'];\n  time = 3000;\n  points = 0;\n  playerChoice = '';\n  state = {\n    computerChoice: '',\n    currency: '',\n    gameOn: false, //na poczatku jest false, po wyborze r/p/s zmienia sie na true zeby przejsc do widoku Result\n    restart: false,\n    rules: false,\n    extendedVersion: false,\n  }\n\n  //zaraz przy zamontowaniu \"nasłuchiwanie\", czy klawisz został wciśnięty i wywołał metodę handleEnterStart\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleEnterRestart, false);\n  }\n\n\n  //Po kliknieciu na divy z ikonkami rozpoczyna sie metoda, ktora sprawdzi wybor gracza z wyborem komputera, ktory zostanie wylosowany z tablicy. Warunki porownuja te wybory i na ich podstawie powstaje decyzja kto wygral. Ustawienie stanu currency i computerChoice jest opoznione o 3s w celu \"wirtualizacji myslenia komputera\", aby bylo ukazane, ze przez ten czas komputer zastanawia sie nad wyborem\n  handlePlayerChoice = (e) => {\n    e.preventDefault();\n    let computerChoice = []; //inicjalizacja zmiennej, ktora na poczatku jest pusta\n    if (this.state.extendedVersion === false) { //jesli jest wybrana podstawowa wersja to wybor komputera bedzie losowany z tablicy podstawowej\n      computerChoice = this.choicesForComputer[Math.floor(Math.random() * this.choicesForComputer.length)];\n    }\n    //jesli jest wybrana rozszerzona wersja to wybor komputera bedzie losowany z tablicy rozszerzonej\n    else {\n      computerChoice = this.choicesForComputerExtended[Math.floor(Math.random() * this.choicesForComputerExtended.length)];\n    }\n    //let computerChoice = this.choicesForComputer[Math.floor(Math.random() * this.choicesForComputer.length)];\n\n    //e.currentTarget.value zamiast e.target.value, ponieważ w buttonie mam zamieszczony img i chce, zeby takze przekazal value=paper/rock/scissors jak na niego klikne\n    this.playerChoice = e.currentTarget.value;\n    if (e.currentTarget.value === computerChoice) {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.setState({\n          currency: 'DRAW',\n          computerChoice: this.playerChoice,\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'paper' && computerChoice === 'rock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'rock',\n        })\n      }, this.time);\n\n    } else if (e.currentTarget.value === 'rock' && computerChoice === 'paper') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'paper',\n        })\n      }, this.time)\n    } else if (e.currentTarget.value === 'paper' && computerChoice === 'scissors') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'scissors',\n        })\n      }, this.time)\n    } else if (e.currentTarget.value === 'scissors' && computerChoice === 'paper') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'paper',\n        })\n      }, this.time);\n\n    } else if (e.currentTarget.value === 'scissors' && computerChoice === 'rock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'rock',\n        })\n      }, this.time);\n\n    } else if (e.currentTarget.value === 'rock' && computerChoice === 'scissors') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'scissors',\n        })\n      }, this.time);\n\n    }\n    /*========================================\n    Instrukcje warunkowe dla extended version\n    =========================================*/\n    else if (e.currentTarget.value === 'rock' && computerChoice === 'lizard') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'lizard',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'lizard' && computerChoice === 'rock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'rock',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'lizard' && computerChoice === 'spock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'spock',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'spock' && computerChoice === 'lizard') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'lizard',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'spock' && computerChoice === 'scissors') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'scissors',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'scissors' && computerChoice === 'spock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'spock',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'scissors' && computerChoice === 'lizard') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'lizard',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'lizard' && computerChoice === 'scissors') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'scissors',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'lizard' && computerChoice === 'paper') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'paper',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'paper' && computerChoice === 'lizard') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'lizard',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'paper' && computerChoice === 'spock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'spock',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'spock' && computerChoice === 'paper') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'paper',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'spock' && computerChoice === 'rock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'rock',\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'rock' && computerChoice === 'spock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'spock',\n        })\n      }, this.time);\n    }\n  }\n\n  /*Przcysik restart, ktory po kliknieciu zmieni stany, zeby mozna bylo zaczac gre od poczatku  */\n  handleRestart = (e) => {\n    e.preventDefault();\n    if (this.state.restart === false) {\n      this.setState({\n        gameOn: false,\n        computerChoice: '',\n        currency: '',\n      })\n    }\n  }\n\n  handleEnterRestart = (e) => {\n    //jesli wcisnieto enter, restart === false i dokonał się już jakiś wybór komputera, czyli wybór nie jest pusty, wtedy więc pojawi się przycisk Restart wtedy ustaw stan na poczatkowy\n    if (e.keyCode === 13 && this.state.restart === false && this.state.computerChoice !== '') {\n      this.setState({\n        gameOn: false,\n        computerChoice: '',\n        currency: '',\n      })\n    }\n  }\n\n\n  /*Metoda uruchamiajaca sie jesli kliknie w obrebie diva App */\n  handleCloseRulesOnAppClick = (rulesFromRulesState) => { //musze miec wartosc rules z Rules\n    this.setState({\n      rules: !this.state.rules, //zmiana na przeciwny stan\n    })\n    if (rulesFromRulesState === false) { //jesli sa wylaczone rules z Rules to i tu wylacz, zeby jak zapamieta klikniecie na true, zmienil na false, bo inaczej dwa razy klikac bede musial, zeby wejsc\n      this.setState({\n        rules: false,\n      })\n    }\n\n  }\n\n  //Obsluga slidera to zmiany wersji gry\n  handleSlider = () => {\n    this.setState({\n      extendedVersion: !this.state.extendedVersion, //zmiana stanu na przeciwny z false na true, a jak jest true to na false\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"mainMenu\" className=\"App\" onClick={this.handleCloseRulesOnAppClick} style={this.state.gameOn ? this.gridTemplateAreasResult : this.gridTemplateAreasChooseOption} > {/* zamykanie poprzez klikniecie w dowolne miejsce na stronie, postaram sie zrobic, zeby jak w okienko z zasadami klikne to sie nie zamykalo, czyli bede musial ten display w inny mdivie umiescic */}\n          <div className=\"header\">\n            <div className='title'>\n              <a href=\"mainMenu\"><img className=\"logoImg\" src={this.state.extendedVersion ? logoExtended : logo} alt={logo} /></a>\n            </div>\n            <div className='pointsContainer'>\n              <p className='points-title'>SCORE</p>\n              <p className='points-count'>{this.points}</p>\n            </div>\n          </div>\n          {this.state.gameOn ?\n            <>\n              <Result playerChoice={this.playerChoice} computerChoice={this.state.computerChoice} currency={this.state.currency} handleRestart={this.handleRestart} handleEnter={this.handleEnter} />\n            </>\n            :\n            <>\n              <ChooseVersionOfGame extendedVersion={this.state.extendedVersion} handleSlider={this.handleSlider} />\n\n              {this.state.extendedVersion ?\n\n                <ExtendedVersion handlePlayerChoice={this.handlePlayerChoice} />\n                :\n                <div className='chooseOption classicVersionContainer'>\n                  <div className='paperElement paperElementClassic'>\n                    <button className='chooseElementButton' onClick={this.handlePlayerChoice} value='paper'><img className='paperImg' src={paper} alt=\"icon-paper\" /></button>\n                  </div>\n                  <div className='scissorsElement scissorsElementClassic'>\n                    <button className='chooseElementButton' onClick={this.handlePlayerChoice} value='scissors'><img className='scissorsImg' src={scissors} alt=\"icon-scissors\" /></button>\n                  </div>\n                  <div className='rockElement rockElementClassic'>\n                    <button className='chooseElementButton' onClick={this.handlePlayerChoice} value='rock'><img className='rockImg' src={rock} alt=\"icon-rock\" /></button>\n                  </div>\n                </div>\n              }\n\n\n            </>\n          }\n          <br />\n        </div>\n        <div className='rulesContainer'>\n          <Rules rulesApp={this.state.rules} handleCloseRulesOnAppClick={this.handleCloseRulesOnAppClick} extendedVersion={this.state.extendedVersion} />\n        </div>\n        <div className=\"attribution\">\n          Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"attributionLink\">Frontend Mentor</a>.\n          Coded by <a href=\"https://github.com/PioKl\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"attributionLink\">Piotr Kłosowski</a>.\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}