{"version":3,"sources":["images/icon-paper.svg","images/icon-rock.svg","images/icon-scissors.svg","images/logo.svg","images/image-rules.svg","images/icon-close.svg","components/Rules.js","components/Result.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Rules","blackBody","backgroundColor","state","rules","handleRules","e","preventDefault","_this","setState","props","handleCloseRulesOnAppClick","displayRules","react_default","a","createElement","Fragment","className","onClick","handleCloseRules","value","src","iconClose","alt","rulesImg","handleCloseGlobal","rulesApp","console","log","this","document","addEventListener","style","color","Component","Result","playerChoice","computerChoice","currency","handleRestart","concat","paper","rock","scissors","App","gridTemplateAreasChooseOption","display","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridTemplateAreasResult","choicesForComputer","time","points","gameOn","restart","handlePlayerChoice","Math","floor","random","length","currentTarget","setTimeout","rulesFromRulesState","id","href","logo","components_Result","components_Rules","class","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3242131e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.759a2075.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules.5d74d25d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.919ab92a.svg\";","import React, { Component } from 'react';\r\nimport '../style/Rules.scss';\r\nimport rulesImg from '../images/image-rules.svg';\r\nimport iconClose from '../images/icon-close.svg';\r\n\r\nclass Rules extends Component {\r\n\r\n    blackBody = {\r\n        backgroundColor: 'black',\r\n    }\r\n    state = {\r\n        rules: false,\r\n    }\r\n\r\n    handleRules = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            rules: !this.state.rules,\r\n        })\r\n        this.props.handleCloseRulesOnAppClick(this.state.rules);//przekazanie statnu rules do metody w App\r\n    }\r\n\r\n    displayRules = () => { //wy≈õwietlenie zasad jesli rules sa true, czyli kliknieto na przycisk\r\n        if (this.state.rules) {\r\n            return (\r\n                <>\r\n                    <div className='rulesMenu'>\r\n                        <div className='rulesTitle'>\r\n                            <h1>Rules</h1>\r\n                            <button className=\"rulesCloseButton\" onClick={this.handleCloseRules} value='x'><img src={iconClose} alt=\"iconClose\" /></button>\r\n                        </div>\r\n                        <div className='rulesImgContainer'>\r\n                            <img className='rulesImg' src={rulesImg} alt=\"rulesImg\" />\r\n                        </div>\r\n\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCloseGlobal = () => { // to bedzie wynikalo z handleCloseRulesOnAppClick w App, pobiera stan rules w App poprzez props, zadaniem tego jest ustawienie rules w Rules na false, czyli zamkniecia okna Rules, jesli kliknie sie na div o klasie App\r\n        if (this.props.rulesApp === true) {\r\n            this.setState({\r\n                rules: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCloseRules = () => {\r\n        if (this.state.rules === true) { //jesli jest otworzone okno rules, to wtedy jak klikne w odpowiednie miejsce to zamknij okno z rules, czyli zmien na false\r\n            this.setState({\r\n                rules: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.rulesApp)\r\n        console.log(this.state.rules)\r\n        console.log('----------------------------------')\r\n        return (\r\n            <>\r\n\r\n                {this.state.rules ? document.addEventListener('click', this.handleCloseGlobal) : null}\r\n                <button className=\"rulesOpenButton\" onClick={this.handleRules} style={{ backgroundColor: (this.state.rules ? 'white' : null), color: (this.state.rules ? 'hsl(229, 25%, 31%)' : null) }} value='rules'>Rules</button>\r\n                {this.displayRules()}\r\n                {this.state.rules ? <style>{'body { background-color: background-color: rgba(0, 0, 0, .3) } .App {opacity: .3}'}</style> : null}\r\n                {/* {this.state.rules ? <style>{'body { background-image: linear-gradient(rgba(0,0,0,.6), rgba(0,0,0,.6)) }'}</style> : null} */}\r\n                {/*      {this.state.rules ? <style>{'#container { background-color: rgba(0, 0, 0, .3); padding-bottom:39px } .App {opacity: .3}'}</style> : null} */}\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport paper from '../images/icon-paper.svg';\r\nimport rock from '../images/icon-rock.svg';\r\nimport scissors from '../images/icon-scissors.svg';\r\nimport '../style/Result.scss';\r\n\r\nconst Result = (props) => {\r\n    const { playerChoice, computerChoice, currency, handleRestart } = props;\r\n    return (\r\n        <>\r\n            <div className='result'>\r\n                <div className=\"playerChoice\">\r\n                    <h1 className='pickedTitle'>You Picked</h1>\r\n                    <div className={`${playerChoice}Element ${currency === \"YOU WIN\" ? 'winImpulse' : null}`/*te currency jest po to, zeby dodac klase winImpulse w razie przypadku gdy gracz wygra */}>\r\n                        <div className=\"choosedElement\">\r\n                            <img className={`${playerChoice}Img`} src={playerChoice === 'paper' ? paper : playerChoice === 'rock' ? rock : playerChoice === 'scissors' ? scissors : null} alt={playerChoice} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"restartGame\">\r\n                    <h1 className=\"currencyOfGame\">{currency}</h1>\r\n                    {computerChoice && <button className=\"buttonRestart\" onClick={handleRestart} value='restart'>Restart</button>} {/* jesli komputer juz dokonal wyboru, zebym restart ujrzal dopiero jak sie pojawi co wybral komputer, mozna tez zrobic jak currency nie jest puste */}\r\n                </div>\r\n                <div className=\"computerChoice\">\r\n                    <h1 className='pickedTitle'>Computer Picked</h1>\r\n                    {computerChoice ?\r\n                        <div className={`${computerChoice}Element ${currency === \"YOU LOST\" ? 'winImpulse' : null}` /* te currency jest po to, zeby dodac klase winImpulse w razie przypadku gdy komputer wygra */}>\r\n                            <div className=\"choosedElement\">\r\n                                <img className={`${computerChoice}Img`} src={computerChoice === 'paper' ? paper : computerChoice === 'rock' ? rock : computerChoice === 'scissors' ? scissors : null} alt={computerChoice} />\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className='loadingComputerChooseImpulse'>\r\n                            <div className=\"loadingComputerChooseImpulse2\">\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport '../style/App.scss';\nimport Rules from './Rules';\nimport Result from './Result';\n\nimport paper from '../images/icon-paper.svg';\nimport rock from '../images/icon-rock.svg';\nimport scissors from '../images/icon-scissors.svg';\nimport logo from '../images/logo.svg';\n\nclass App extends Component {\n\n\n\n  gridTemplateAreasChooseOption = {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gridTemplateRows: \"auto\",\n    gridTemplateAreas: \"'header''chooseOption''rulesContainer'\",\n  };\n  gridTemplateAreasResult = {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gridTemplateRows: \"auto\",\n    gridTemplateAreas: \"'header''result''rulesContainer'\",\n  }\n  choicesForComputer = ['paper', 'rock', 'scissors'];\n  time = 3000;\n  points = 0;\n  playerChoice = '';\n  state = {\n    computerChoice: '',\n    currency: '',\n    gameOn: false,\n    restart: false,\n    rules: false,\n  }\n\n\n  handlePlayerChoice = (e) => {\n    e.preventDefault();\n    let computerChoice = this.choicesForComputer[Math.floor(Math.random() * this.choicesForComputer.length)];\n\n    //e.currentTarget.value zamiast e.target.value, poniewa≈º w buttonie mam zamieszczony img i chce, zeby takze przekazal value=paper/rock/scissors jak na niego klikne\n    this.playerChoice = e.currentTarget.value;\n    if (e.currentTarget.value === computerChoice) {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.setState({\n          currency: 'DRAW',\n          computerChoice: this.playerChoice,\n        })\n      }, this.time);\n    } else if (e.currentTarget.value === 'paper' && computerChoice === 'rock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'rock',\n        })\n      }, this.time);\n\n    } else if (e.currentTarget.value === 'rock' && computerChoice === 'paper') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'paper',\n        })\n      }, this.time)\n    } else if (e.currentTarget.value === 'paper' && computerChoice === 'scissors') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'scissors',\n        })\n      }, this.time)\n    } else if (e.currentTarget.value === 'scissors' && computerChoice === 'paper') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'paper',\n        })\n      }, this.time);\n\n    } else if (e.currentTarget.value === 'scissors' && computerChoice === 'rock') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        if (this.points > 0) {\n          this.points -= 1;\n        }\n        this.setState({\n          currency: 'YOU LOST',\n          computerChoice: 'rock',\n        })\n      }, this.time);\n\n    } else if (e.currentTarget.value === 'rock' && computerChoice === 'scissors') {\n      this.setState({\n        gameOn: true,\n      })\n      setTimeout(() => {\n        this.points += 1;\n        this.setState({\n          currency: 'YOU WIN',\n          computerChoice: 'scissors',\n        })\n      }, this.time);\n\n    }\n  }\n\n\n  handleRestart = (e) => {\n    e.preventDefault();\n    if (this.state.restart === false) {\n      this.setState({\n        gameOn: false,\n        computerChoice: '',\n        currency: '',\n      })\n    }\n  }\n\n  handleCloseRulesOnAppClick = (rulesFromRulesState) => { //musze miec wartosc rules z Rules\n    this.setState({\n      rules: !this.state.rules,\n    })\n    if (rulesFromRulesState === false) { //jesli sa wylaczone rules z Rules to i tu wylacz, zeby jak zapamieta klikniecie na true, zmienil na false, bo inaczej dwa razy klikac bede musial, zeby wejsc\n      this.setState({\n        rules: false,\n      })\n    }\n\n  }\n\n\n  render() {\n\n    return (\n      <>\n        {/* <div id='container'> */}\n        <div id=\"mainMenu\" className=\"App\" onClick={this.handleCloseRulesOnAppClick} style={this.state.gameOn ? this.gridTemplateAreasResult : this.gridTemplateAreasChooseOption} > {/* zamykanie poprzez klikniecie w dowolne miejsce na stronie, postaram sie zrobic, zeby jak w okienko z zasadami klikne to sie nie zamykalo, czyli bede musial ten display w inny mdivie umiescic */}\n          <div className=\"header\">\n            <div className='title'>\n              <a href=\"mainMenu\"><img className=\"logoImg\" src={logo} alt={logo} /></a>\n            </div>\n            <div className='pointsContainer'>\n              <p className='points-title'>SCORE</p>\n              <p className='points-count'>{this.points}</p>\n            </div>\n          </div>\n\n          {this.state.gameOn ?\n            <>\n              <Result playerChoice={this.playerChoice} computerChoice={this.state.computerChoice} currency={this.state.currency} handleRestart={this.handleRestart} />\n            </>\n            :\n            <>\n              <div className='chooseOption'>\n                <div className='paperElement'>\n                  <button className='chooseElementButton' onClick={this.handlePlayerChoice} value='paper'><img className='paperImg' src={paper} alt=\"icon-paper\" /></button>\n                </div>\n                <div className='scissorsElement'>\n                  <button className='chooseElementButton' onClick={this.handlePlayerChoice} value='scissors'><img className='scissorsImg' src={scissors} alt=\"icon-scissors\" /></button>\n                </div>\n                <div className='rockElement'>\n                  <button className='chooseElementButton' onClick={this.handlePlayerChoice} value='rock'><img className='rockImg' src={rock} alt=\"icon-rock\" /></button>\n                </div>\n              </div>\n            </>\n          }\n          <br />\n        </div>\n        <div className='rulesContainer'>\n          <Rules rulesApp={this.state.rules} handleCloseRulesOnAppClick={this.handleCloseRulesOnAppClick} />\n        </div>\n        <div class=\"attribution\">\n          Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noopener noreferrer\">Frontend Mentor</a>.\n          Coded by <a href=\"https://github.com/PioKl\" target=\"_blank\" rel=\"noopener noreferrer\">Piotr K≈Çosowski</a>.\n        </div>\n        {/* </div> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}